Include: setup.vader

Before:
  let g:numbers_test_textobj = 'n'

Given (floating-point examples from ':help floating-point-format'):
    123.456  
      +0.0001  
    55.0  
    -0.123  
      1.234e03  
    1.0E-6  
    -3.1416e+88  
      0.239823  
    1243  
      1243e-03  
     -9.934e1.843

Execute (only the numbers were selected):
  let expected = [
    \[3, 9],
    \[5, 11],
    \[3, 6],
    \[3, 8],
    \[5, 12],
    \[3, 8],
    \[3, 13],
    \[5, 12],
    \[3, 6],
    \[5, 12],
    \[4, 15],
  \]

  call DoAllSelections(g:numbers_test_textobj, expected)

Given (numbers in different contexts):
  !123.456\
  #123.456f
  $123.456\%

Execute (only the numbers were selected):
  let expected = [
    \[2, 8],
    \[2, 8],
    \[2, 8],
  \]

  call DoAllSelections(g:numbers_test_textobj, expected)

Before:
  let g:numbers_test_textobj = 'n'
  let g:numbers#include_leading_zeroes = 0

After:
  unlet g:numbers_test_textobj

Given (invalid numbers):
  923..98239..
  .923498
  000.23943
  123.456e

Execute (nothing was selected):
  let expected = [
    \[0, 0],
    \[0, 0],
    \[0, 0],
    \[0, 0],
  \]

  call DoAllSelections(g:numbers_test_textobj, expected)
