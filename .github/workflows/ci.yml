name: Run vader tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    if: "!contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    strategy:
      matrix:
        vim_type: ['vim']
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        vim_version: ['head', 'v8.0.0000', 'v7.4', 'v7.0']
        python: [3.8]
        exclude:
          # Build fails to find Quickdraw.h
          - os: 'macos-latest'
            vim_version: 'v7.0'
          # uint32_t is not correctly defined via configure
          - os: 'macos-latest'
            vim_version: 'v7.4'
          # Build causes a buffer overflow when running the test script
          - os: 'ubuntu-latest'
            vim_version: 'v7.0'
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: 'actions/checkout@v2'
      - name: 'Setup vim/neovim'
        id: 'vim'
        uses: 'thinca/action-setup-vim@v1'
        with:
          vim_version: '${{ matrix.version || matrix.vim_version }}'
          vim_type: '${{ matrix.vim_type }}'
      - name: 'Install vader.vim'
        run: git clone https://github.com/junegunn/vader.vim.git
      - name: 'Set up Python ${{ matrix.python }}'
        if: matrix.os != 'windows-latest'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: 'Install covimerage and coveralls'
        if: matrix.os != 'windows-latest'
        run: |
          pip install --upgrade pip
          pip install covimerage coveralls
          covimerage --version
          coveralls --version
      - name: 'Run vader tests'
        env:
          VADER_OUTPUT_FILE: vader.log
          TESTVIM: ${{ steps.vim.outputs.executable }}
          TEST_OS: ${{ matrix.os }}
        shell: bash
        run: ./tests/run_tests.sh
      - name: 'Coveralls parallel'
        if: matrix.os != 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-${{ matrix.os }}-${{ matrix.vim_type }}-${{ matrix.vim_version }}
          COVERALLS_PARALLEL: true
        run: coveralls

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 'Set up Python ${{ matrix.python }}'
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: 'Submit results to coveralls'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install --upgrade pip
          pip install coveralls
          coveralls --finish
